// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/cvseeker/resumes/batch/upload": {
            "post": {
                "description": "Processes multiple uploaded resume files and associated metadata as JSON in a single batch.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data Processing"
                ],
                "summary": "Batch processes resume data",
                "parameters": [
                    {
                        "description": "Batch of resume data including file bytes for each",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ResumesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/meta.BasicResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dtos.ResumeProcessingResult"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    }
                }
            }
        },
        "/cvseeker/resumes/search": {
            "post": {
                "description": "Executes a search combining keyword and vector-based queries with customizable boosting on the vector component.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Perform hybridsearch on elasticsearch",
                "parameters": [
                    {
                        "description": "Message content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.QueryRequest"
                        }
                    },
                    {
                        "type": "number",
                        "default": 0.5,
                        "description": "Boost factor for the KNN component",
                        "name": "knnBoost",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Start index for search results",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of search results to return",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/meta.BasicResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/elasticsearch.ResumeSummaryDTO"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    }
                }
            }
        },
        "/cvseeker/resumes/thread": {
            "get": {
                "description": "Retrieves all thread IDs from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chatbot"
                ],
                "summary": "Get all thread IDs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/meta.BasicResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dtos.Thread"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    }
                }
            }
        },
        "/cvseeker/resumes/thread/start": {
            "post": {
                "description": "Starts a new chat session by creating an assistant and a thread, using specified documents.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chatbot"
                ],
                "summary": "Start a new chat session",
                "parameters": [
                    {
                        "description": "Comma-separated list of document IDs",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.StartChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/meta.BasicResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/gpt.ThreadResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    }
                }
            }
        },
        "/cvseeker/resumes/thread/{threadId}": {
            "get": {
                "description": "Retrieves all resume IDs associated with a given thread ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chatbot"
                ],
                "summary": "Get resume IDs by thread ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "threadId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    }
                }
            }
        },
        "/cvseeker/resumes/thread/{threadId}/messages": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of messages for a thread.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chatbot"
                ],
                "summary": "List messages belonging to a thread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "threadId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of messages to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor for pagination, specifying an exclusive start point for the list (ID of a message)",
                        "name": "after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor for pagination, specifying an exclusive end point for the list (ID of a message)",
                        "name": "before",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/meta.BasicResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/gpt.ListMessagesResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    }
                }
            }
        },
        "/cvseeker/resumes/thread/{threadId}/send": {
            "post": {
                "description": "Sends a message to the specified chat session using message content provided in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chatbot"
                ],
                "summary": "Send a message to a chat session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "threadId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message content",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.QueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/meta.BasicResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/gpt.ListMessagesResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    }
                }
            }
        },
        "/cvseeker/resumes/thread/{threadId}/updateName": {
            "post": {
                "description": "Updates the name of an existing thread by thread ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chatbot"
                ],
                "summary": "Update a thread's name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "threadId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New Name for the Thread",
                        "name": "newName",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/meta.BasicResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/elasticsearch.ResumeSummaryDTO"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    }
                }
            }
        },
        "/cvseeker/resumes/upload": {
            "get": {
                "description": "Fetches a list of all upload records sorted from the most recent to the oldest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data Processing"
                ],
                "summary": "Retrieves all upload records",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/meta.BasicResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dtos.UploadDTO"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Processes uploaded resume files and associated metadata as JSON",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data Processing"
                ],
                "summary": "Processes resume data",
                "parameters": [
                    {
                        "description": "Resume data including file bytes",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ResumeData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/meta.BasicResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.ResumeProcessingResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    }
                }
            }
        },
        "/cvseeker/resumes/{id}": {
            "get": {
                "description": "Retrieves a document by its ID from the Elasticsearch index.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Get Document By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/meta.BasicResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/elasticsearch.ResumeSummaryDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a document by its ID from the Elasticsearch index.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Delete Document By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document deletion successful",
                        "schema": {
                            "$ref": "#/definitions/meta.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.QueryRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "dtos.ResumeData": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "fileBytes": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "dtos.ResumeProcessingResult": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Assume each resume has a reference or ID.",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dtos.ResumesRequest": {
            "type": "object",
            "properties": {
                "resumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ResumeData"
                    }
                }
            }
        },
        "dtos.StartChatRequest": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "string"
                },
                "threadName": {
                    "type": "string"
                }
            }
        },
        "dtos.Thread": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "dtos.UploadDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "Assuming date is formatted as a string for the client",
                    "type": "integer"
                },
                "documentId": {
                    "description": "omitempty to not display if empty",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "elasticsearch.Award": {
            "type": "object",
            "properties": {
                "award_name": {
                    "type": "string"
                }
            }
        },
        "elasticsearch.BasicInfo": {
            "type": "object",
            "properties": {
                "education_level": {
                    "description": "BS, MS, or PhD",
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gpa": {
                    "type": "number"
                },
                "majors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "university": {
                    "type": "string"
                }
            }
        },
        "elasticsearch.ProjectExperience": {
            "type": "object",
            "properties": {
                "project_description": {
                    "type": "string"
                },
                "project_name": {
                    "type": "string"
                }
            }
        },
        "elasticsearch.ResumeSummaryDTO": {
            "type": "object",
            "properties": {
                "award": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearch.Award"
                    }
                },
                "basic_info": {
                    "$ref": "#/definitions/elasticsearch.BasicInfo"
                },
                "id": {
                    "type": "string"
                },
                "project_experience": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearch.ProjectExperience"
                    }
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "summary": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "work_experience": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/elasticsearch.WorkExperience"
                    }
                }
            }
        },
        "elasticsearch.WorkExperience": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string"
                },
                "duration": {
                    "description": "Could be changed to a more structured format if necessary",
                    "type": "string"
                },
                "job_summary": {
                    "type": "string"
                },
                "job_title": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "gpt.ListMessagesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gpt.MessageResponse"
                    }
                },
                "first_id": {
                    "type": "string"
                },
                "has_more": {
                    "type": "boolean"
                },
                "last_id": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "gpt.MessageContent": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "array",
                            "items": {}
                        },
                        "value": {
                            "type": "string"
                        }
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "gpt.MessageResponse": {
            "type": "object",
            "properties": {
                "assistant_id": {
                    "type": "string"
                },
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gpt.MessageContent"
                    }
                },
                "created_at": {
                    "type": "integer"
                },
                "file_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "object": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "run_id": {
                    "type": "string"
                },
                "thread_id": {
                    "type": "string"
                }
            }
        },
        "gpt.ThreadResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "meta.BasicResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "meta": {
                    "$ref": "#/definitions/meta.Meta"
                },
                "plan": {}
            }
        },
        "meta.Error": {
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/meta.Meta"
                }
            }
        },
        "meta.Meta": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "extra": {},
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "CVSeeker Server",
	Description:      "This is the server for api endpoints related to the CVSeeker application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
